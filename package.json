{
  "name": "root",
  "private": true,
  "description": "Useful React hooks for everyone.",
  "scripts": {
    "clean": "lerna clean",
    "lint": "lerna exec --stream --parallel --ignore rooks --ignore shared --ignore docusaurus --ignore eslint-config-rooks -- sh ../../scripts/lint.sh",
    "format": "yarn run prettier --write \"./packages/shared/*.+(js|jsx|ts|tsx)\"",
    "test": "lerna run test --scope shared",
    "coverage": "lerna run test --stream --parallel -- --coverage",
    "create": "node helpers/create",
    "add-license-to-pkg": "lerna exec --scope=@rooks/* --concurrency 1 --stream -- 'node ../../helpers/add-license-to-pkg.js'",
    "compute-package-list": "node helpers/compute-package-list",
    "update-title-card": "lerna exec --scope=@rooks/* --concurrency 1 --stream -- 'node ../../helpers/update-title-card/index.js'",
    "readme-to-docs": "lerna exec --scope=@rooks/* --scope=rooks --concurrency 1 --stream -- 'node ../../helpers/docs/index.js'",
    "bs": "lerna bootstrap",
    "prebuild": "lerna clean -y && yarn",
    "build:independent": "lerna exec --stream --parallel --ignore rooks --ignore shared --ignore docusaurus --ignore eslint-config-rooks -- sh ../../scripts/build.sh",
    "build:independent-dts": "lerna exec --stream --parallel --ignore rooks --ignore shared --ignore docusaurus --ignore eslint-config-rooks -- sh ../../scripts/dts-build.sh",
    "build:independent:ci": "lerna exec --ignore rooks --ignore shared --ignore docusaurus --ignore eslint-config-rooks -- sh ../../scripts/build.sh",
    "build:independent-dts:ci": "lerna exec --stream --parallel --ignore rooks --ignore shared --ignore docusaurus --ignore eslint-config-rooks --concurrency 4 -- sh ../../scripts/dts-build.sh",
    "build:rooks": "lerna run --scope rooks build",
    "build:docs": "lerna run --scope docusaurus build",
    "build:shared": "lerna run --scope shared build",
    "build:ci": "NODE_ENV=CI yarn run build:shared && NODE_ENV=CI yarn run build:independent:ci && NODE_ENV=CI yarn run build:independent-dts:ci && NODE_ENV=CI yarn run build:rooks",
    "build:action": "yarn run build:shared && yarn run build:independent:ci && yarn run build:independent-dts:ci && yarn run build:rooks",
    "build:custom-github-actions": "cd ./.github/actions && for d in ./*/ ; do (cd \"$d\" && npm install && npm run build); done",
    "build:only": "yarn run build:shared --stream --parallel && yarn run build:independent --stream --parallel && yarn run build:independent-dts --stream --parallel && yarn run build:rooks  --stream --parallel",
    "build": "yarn run build:only",
    "prerelease-version-bump": "GITHUB_SHA=$(git rev-parse HEAD | cut -c1-8);lerna version prerelease --force-publish=* --preid ${GITHUB_SHA}",
    "ga-prerelease-version": "lerna version prerelease --force-publish=* --no-commit-hooks --no-push --yes",
    "bump-canary": "yarn run new-canary-version prerelease",
    "new-canary-version": "GITHUB_SHA=$(git rev-parse HEAD | cut -c1-8);lerna version --force-publish=* --preid canary",
    "new-release-version": "lerna version --force-publish=*",
    "ga-npm-publish": "lerna publish from-git  --force-publish=* --yes",
    "ts": "rimraf packages/*/*.tsbuildinfo && rimraf packages/*/lib/*.d.ts && tsc -b @package-name-list.txt"
  },
  "optionalDependencies": {
    "fsevents": "1.2.9"
  },
  "dependencies": {
    "@babel/cli": "7.5.5",
    "@babel/core": "7.7.5",
    "@babel/plugin-external-helpers": "7.2.0",
    "@babel/plugin-proposal-export-default-from": "7.5.2",
    "@babel/preset-env": "7.12.11",
    "@babel/preset-react": "7.0.0",
    "@rollup/plugin-babel": "^5.2.1",
    "@rollup/plugin-commonjs": "^16.0.0",
    "@rollup/plugin-json": "^4.1.0",
    "@rollup/plugin-multi-entry": "^4.0.0",
    "@rollup/plugin-node-resolve": "^10.0.0",
    "@rollup/plugin-replace": "^2.3.4",
    "@rollup/plugin-typescript": "^6.1.0",
    "@testing-library/react": "^11.2.1",
    "@testing-library/react-hooks": "^3.4.2",
    "@types/react": "*",
    "@types/react-dom": "*",
    "assert": "^2.0.0",
    "babel-core": "^7.0.0-bridge.0",
    "babel-jest": "^26.6.3",
    "babel-loader": "8.0.5",
    "babel-plugin-prismjs": "1.0.2",
    "babel-preset-minify": "0.5.1",
    "browser-env": "3.2.5",
    "camel-case": "^4.1.1",
    "chalk": "2.4.2",
    "execa": "^4.1.0",
    "glob": "^7.1.6",
    "husky": "^4.2.5",
    "inquirer": "7.0.0",
    "jest": "^26.6.3",
    "jest-localstorage-mock": "^2.4.3",
    "lerna": "^3.13.2",
    "lint-staged": "^10.2.12",
    "lodash.capitalize": "4.2.1",
    "lodash.truncate": "^4.4.2",
    "make-dir": "1.3.0",
    "mdast-normalize-headings": "^2.0.0",
    "mdast-util-compact": "^3.0.0",
    "mdast-util-from-markdown": "^0.8.1",
    "mdast-util-heading-range": "^2.1.5",
    "mdast-util-to-markdown": "^0.5.3",
    "mdast-zone": "^4.0.1",
    "meow": "5.0.0",
    "mini-css-extract-plugin": "0.8.0",
    "ora": "4.0.3",
    "prettier": "^2.2.1",
    "raf": "3.4.1",
    "react": "16.9.0",
    "react-dom": "16.9.0",
    "react-test-renderer": "16.9.0",
    "read-pkg-up": "7.0.0",
    "readline-sync": "^1.4.10",
    "remark": "^13.0.0",
    "remark-behead": "^2.3.3",
    "remark-frontmatter": "^3.0.0",
    "remark-preset-lint-markdown-style-guide": "^4.0.0",
    "remark-strip-badges": "^5.0.0",
    "replace-string": "2.0.0",
    "rollup": "^2.33.3",
    "rollup-plugin-dts": "^1.4.14",
    "rollup-plugin-sourcemaps": "^0.6.3",
    "rollup-plugin-terser": "^7.0.2",
    "rollup-plugin-typescript2": "^0.29.0",
    "shelljs": "0.8.3",
    "terser": "3",
    "ts-jest": "^26.4.4",
    "tslib": "^2.0.3",
    "typescript": "^4.0.5",
    "unist-util-find": "^1.0.2",
    "unist-util-find-all-after": "^3.0.2",
    "unist-util-find-all-before": "^3.0.1",
    "unist-util-find-all-between": "^2.1.0",
    "unist-util-visit": "^2.0.3",
    "vfile-reporter": "^6.0.1",
    "webpack": "4.46.0",
    "webpack-cli": "^4.2.0",
    "write-pkg": "3.2.0"
  },
  "workspaces": {
    "packages": [
      "packages/*"
    ],
    "nohoist": [
      "**/html-minifier-terser"
    ]
  },
  "devDependencies": {
    "esbuild": "^0.11.2"
  },
  "husky": {
    "hooks": {
      "pre-commit": "if [[ $IS_GH_ACTION != 1 ]]; then lint-staged; fi;"
    }
  },
  "lint-staged": {
    "*.{html,js,ts,tsx,json,yml,css,scss}": "prettier --write"
  }
}
